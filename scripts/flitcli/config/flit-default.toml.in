# -- LICENSE BEGIN --
#
# Copyright (c) 2015-2018, Lawrence Livermore National Security, LLC.
#
# Produced at the Lawrence Livermore National Laboratory
#
# Written by
#   Michael Bentley (mikebentley15@gmail.com),
#   Geof Sawaya (fredricflinstone@gmail.com),
#   and Ian Briggs (ian.briggs@utah.edu)
# under the direction of
#   Ganesh Gopalakrishnan
#   and Dong H. Ahn.
#
# LLNL-CODE-743137
#
# All rights reserved.
#
# This file is part of FLiT. For details, see
#   https://pruners.github.io/flit
# Please also read
#   https://github.com/PRUNERS/FLiT/blob/master/LICENSE
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
# - Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the disclaimer below.
#
# - Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the disclaimer
#   (as noted below) in the documentation and/or other materials
#   provided with the distribution.
#
# - Neither the name of the LLNS/LLNL nor the names of its
#   contributors may be used to endorse or promote products derived
#   from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL LAWRENCE LIVERMORE NATIONAL
# SECURITY, LLC, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.
#
# Additional BSD Notice
#
# 1. This notice is required to be provided under our contract
#    with the U.S. Department of Energy (DOE). This work was
#    produced at Lawrence Livermore National Laboratory under
#    Contract No. DE-AC52-07NA27344 with the DOE.
#
# 2. Neither the United States Government nor Lawrence Livermore
#    National Security, LLC nor any of their employees, makes any
#    warranty, express or implied, or assumes any liability or
#    responsibility for the accuracy, completeness, or usefulness of
#    any information, apparatus, product, or process disclosed, or
#    represents that its use would not infringe privately-owned
#    rights.
#
# 3. Also, reference herein to any specific commercial products,
#    process, or services by trade name, trademark, manufacturer or
#    otherwise does not necessarily constitute or imply its
#    endorsement, recommendation, or favoring by the United States
#    Government or Lawrence Livermore National Security, LLC. The
#    views and opinions of authors expressed herein do not
#    necessarily state or reflect those of the United States
#    Government or Lawrence Livermore National Security, LLC, and
#    shall not be used for advertising or product endorsement
#    purposes.
#
# -- LICENSE END --
# Autogenerated by "flit init"
#   flit version {flit_version}

# General information
[host]

# if you omit name, the system hostname will be used
name = '{hostname}'

# if you omit flit_path, the current flit executable will be used
flit_path = '{flit_path}'

# if you omit config_dir, it will be taken from the current flit executable
config_dir = '{config_dir}'


[database]

# only sqlite is supported, so this field can be safely omitted
type = 'sqlite'

# if this is a relative path, it is relative to the directory containing this
# configuration file.
filepath = 'results.sqlite'


[run]

# Set this to false to not do any timing at all
timing = true

# The number of loops to run with the timing.  For values < 0, the number of
# loops to run will be determined automatically.
timing_loops = -1

# How many times to repeat the timing.  The minimum of the repeated timings
# will be kept.
timing_repeats = 3

# The tests can be run with MPI to test MPI applications
# Warning: FLiT assumes tests are deterministic.  It is your responsability to
#          ensure that your test will always produce the same result even using
#          MPI.
# The mpirun_args are for any flags passed to mpirun.  For example, you can do
#   mpirun_args = '-n 16 --verbose'
enable_mpi = false
mpirun_args = ''


# The settings for "make dev", which generates the "devrun" executable
[dev_build]

# compiler_name must be found in the [[compiler]] list under the name attribute
# The optimization level and switches need not match those found in the
# associated [[compiler]]
compiler_name = 'gcc'
optimization_level = '-O2'
switches = '-funsafe-math-optimizations'

# The ground truth compilation to use in analysis, for "make gt", which
# generates the "gtrun" executable
[ground_truth]

# compiler_name must be found in the [[compiler]] list under the name attribute
# The optimization level and switches need not match those found in the
# associated [[compiler]]
compiler_name = 'gcc'
optimization_level = '-O0'
switches = ''

# This host's list of compilers.
# - binary: can be an absolute path, relative path, or binary name (found in
#   PATH).  If you want to specify a compiler in the same directory as this
#   config file, prepend with a "./" (e.g. "./my-compiler")
# - name: can be any string.  Used to recognize in the other options such as
#   dev_build and ground_truth
# - type: the brand of the compiler.  We support ('gcc', 'clang', 'intel')
#   Currently, only one of each type may be specified.
# Note that these are all defaulted to use g++, clang++, and icpc from the
# PATH.
# If you specify any one compiler, then these defaults are erased.  If you
# specify no compiler, then these defaults take effect.

[[compiler]]
binary = 'g++'
name = 'g++'
type = 'gcc'
lang = 'c++'
# search space of optimization levels
optimization_levels = [
  '-O0',
  '-O1',
  '-O2',
  '-O3',
]
# search space of compiler switches.
# Note: in some versions of python-toml, there is a parsing bug when a list
#       has an empty string in the middle.  So simply put it at the end without
#       a comma.  This has been fixed in the latest version of python-toml.
# Note: gcc disables -fassociative-math @ O0
switches_list = [
  '-fassociative-math',
  '-fcx-fortran-rules',
  '-fcx-limited-range',
  '-fexcess-precision=fast',
  '-ffinite-math-only',
  '-ffloat-store',
  '-ffp-contract=on',
  '-fmerge-all-constants',
  '-fno-trapping-math',
  '-freciprocal-math',
  '-frounding-math',
  '-fsignaling-nans',
  '-funsafe-math-optimizations',
  '-mavx',
  '-mavx2 -mfma',
  '-mfpmath=sse -mtune=native',
  ''
]

[[compiler]]
binary = 'gfortran'
name = 'gfortran'
type = 'gcc'
lang = 'fortran'
# search space of optimization levels
optimization_levels = [
  '-O0',
  '-O1',
  '-O2',
  '-O3',
]
# search space of compiler switches.
# Note: in some versions of python-toml, there is a parsing bug when a list
#       has an empty string in the middle.  So simply put it at the end without
#       a comma.  This has been fixed in the latest version of python-toml.
# Note: gcc disables -fassociative-math @ O0
switches_list = [
  '-fassociative-math',
  '-fcx-fortran-rules',
  '-fcx-limited-range',
  '-fexcess-precision=fast',
  '-ffinite-math-only',
  '-ffloat-store',
  '-ffp-contract=on',
  '-fmerge-all-constants',
  '-fno-trapping-math',
  '-freciprocal-math',
  '-frounding-math',
  '-fsignaling-nans',
  '-funsafe-math-optimizations',
  '-mavx',
  '-mavx2 -mfma',
  '-mfpmath=sse -mtune=native',
  ''
]

[[compiler]]
binary = 'clang++'
name = 'clang++'
type = 'clang'
lang = 'c++'
# search space of optimization levels
optimization_levels = [
  '-O0',
  '-O1',
  '-O2',
  '-O3',
]
# search space of compiler switches.
# Note: in some versions of python-toml, there is a parsing bug when a list
#       has an empty string in the middle.  So simply put it at the end without
#       a comma.  This has been fixed in the latest version of python-toml.
# Note: Clang not honoring -fassociative-math (issues warning with 3.9)
#       see: https://llvm.org/bugs/show_bug.cgi?id=27372
switches_list = [
  '-fassociative-math',
  '-fexcess-precision=fast',
  '-fexcess-precision=standard',
  '-ffinite-math-only',
  '-ffloat-store',
  '-ffp-contract=on',
  '-fmerge-all-constants',
  '-fno-trapping-math',
  '-freciprocal-math',
  '-frounding-math',
  '-fsignaling-nans',
  '-fsingle-precision-constant',
  '-funsafe-math-optimizations',
  '-march=core-avx2',
  '-mavx',
  '-mavx2 -mfma',
  '-mfpmath=sse -mtune=native',
  ''
]

[[compiler]]
binary = 'icpc'
name = 'icpc'
type = 'intel'
lang = 'c++'
# search space of optimization levels
optimization_levels = [
  '-O0',
  '-O1',
  '-O2',
  '-O3',
]
# search space of compiler switches.
# Note: in some versions of python-toml, there is a parsing bug when a list
#       has an empty string in the middle.  So simply put it at the end without
#       a comma.  This has been fixed in the latest version of python-toml.
switches_list = [
  '--use_fast_math',
  '-fcx-limited-range',
  '-ffloat-store',
  '-fma',
  '-fmerge-all-constants',
  '-fp-model fast=1',
  '-fp-model fast=2',
  '-fp-model=double',
  '-fp-model=except',
  '-fp-model=extended',
  '-fp-model=precise',
  '-fp-model=source',
  '-fp-model=strict',
  '-fp-port',
  '-frounding-math',
  '-fsingle-precision-constant',
  '-ftz',
  '-march=core-avx2',
  '-mavx',
  '-mavx2 -mfma',
  '-mfpmath=sse -mtune=native',
  '-mp1',
  '-no-fma',
  '-no-ftz',
  '-no-prec-div',
  '-prec-div',
  ''
]

[[compiler_collection]]
name = 'gcc'
langs = [
  'cpp',
  'fortran'
]
cpp = 'g++'
fortran = 'gfortran'
